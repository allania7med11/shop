version: "3.8"

services:
  db:
    container_name: shop_db
    image: postgres
    environment:
      POSTGRES_DB: shop_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./db:/app
      - ./db/shop_db_init.sql:/docker-entrypoint-initdb.d/shop_db_init.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    
  redis:
    container_name: shop_redis
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"


  shop_back:
    container_name: shop_back
    image: allania7med11/shop_back:latest 
    build:
      context: ./shop_back
      args:
        DEV_BUILD: True
    env_file: ./shop_back/.env
    depends_on:
      - db
      - redis
    volumes:
      - ./shop_back:/app
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1

  shop_front:
    container_name: shop_front
    build:
      context: ./shop_front
    env_file: ./shop_front/.env
    volumes:
      - ./shop_front:/app
      - /app/node_modules # ensures that the node_modules is completely isolated from the host's filesystem
    ports:
      - "3000:3000"

  nginx:
    container_name: shop_nginx
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "4000:80"
    depends_on:
      - shop_back
      - shop_front
    
  nginx_prod:
    container_name: shop_nginx_prod
    image: allania7med11/shop_nginx_prod:latest 
    build:
      context: .
      dockerfile: nginx_prod/Dockerfile
    ports:
      - "4010:80"
    volumes:
      - ./nginx_prod/nginx.conf:/etc/nginx/nginx.conf
      - ./shop_front/shop_front:/var/www/shop_front
      - ./shop_back/shop_back_static:/var/www/shop_back_static
      - ./nginx_prod/log:/var/log/nginx
    depends_on:
      shop_back:
        condition: service_started
    profiles:
      - prod
  
  shop_back_test:
    container_name: shop_back_test
    build:
      context: ./shop_back
      args:
        DEV_BUILD: True
    env_file: ./shop_back/.env
    volumes:
      - ./shop_back:/app
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=test  # Overwrites the ENVIRONMENT variable
    profiles: ["test"]

  shop_e2e:
    container_name: shop_e2e
    build:
      context: ./shop_e2e
    env_file: ./shop_e2e/.env
    volumes:
      - ./shop_e2e:/app
      - /app/node_modules # ensures that the node_modules is completely isolated from the host's filesystem
    profiles: ["test"]

volumes:
  postgres_data:
